@using Newtonsoft.Json
@model IEnumerable<Web.Models.DoctorViewModel>

@{
    ViewBag.Title = "List Of doctors to add in path";
    Layout = "~/Views/Shared/_BackOfficeLayout.cshtml";
}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.4/dist/leaflet.css"
      integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA=="
      crossorigin="" />
<!-- Make sure you put this AFTER Leaflet's CSS -->
<script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js"
        integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA=="
        crossorigin=""></script>

<div class="page-content-wrapper">
    <div class="page-content">
        <div class="page-bar">
            <div class="page-title-breadcrumb">
                <div class=" pull-left">
                    <input id="idPathPatient" value="@ViewBag.idPath" hidden="true" />

                    <div class="page-title">Medical path for patient</div>
                </div>
                <ol class="breadcrumb page-breadcrumb pull-right">
                    <li>
                        <i class="fa fa-home"></i>&nbsp;<a class="parent-item" href="#">MedicalPath</a>&nbsp;<i class="fa fa-angle-right"></i>
                    </li>
                    <li>
                        <a class="parent-item" href="#">Pathdoctors</a>&nbsp;<i class="fa fa-angle-right"></i>
                    </li>
                    <li class="active">Patient</li>
                </ol>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 col-xs-12">
                <div class="white-box">
                    <div>
                        <input type="text" onkeypress="autocompelte()" id="tags" class="form-control" placeholder="Doctor speciality">
                        <button style="margin-left: 60px;margin-top: 5px" id="seDoc"class="btn btn-info m-r-20" onclick="searchdoctorsBySpeciality()">Search</button>
                    </div>

                    <div class="cardbox">
                        <div class="header" style="display: flex;">
                            <h4 class="font-bold"> ABOUT DOCTOR </h4>
                            
                        </div>
                        <div class="body" id="DropDoc">

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8 col-xs-12" style="margin-top: 10px">
                <div class="cardbox">
                    <div class="body">
                        <div class="mypost-list">
                            <div id="mapid" style="height: 600px"></div>
                        </div>
                        <hr>

                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<!-- end page content -->
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
@section scripts {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script>
        console.clear();

       
        var specialities = [];
        var choosedDistances = [];
        var distances = [];
        var arr = @Html.Raw(Json.Encode(ViewBag.result));
        arr.map(e => {
            if(!specialities.includes(e.speciality))
            { specialities.push(e.speciality);}
        });
        if (specialities.length==0) {
            $('#seDoc').attr("disabled", "disabled");
        }
        console.log(specialities)
        //patient picker and circle
        var greenIcon = new L.Icon({
            iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });
        var pat = @Html.Raw(Json.Encode(ViewBag.patient));
        var mymap = L.map('mapid').setView([pat.address.latitude, pat.address.longit], 10);
        var circle = L.circle([pat.address.latitude, pat.address.longit],
            {
                color: 'green',
                fillColor: '#008000',
                fillOpacity: 0.5,
                radius: 1000
            }).addTo(mymap);

        var marker = L.marker([pat.address.latitude, pat.address.longit], { icon: greenIcon });
        marker.bindPopup('<b>Hello Sir!</b><br>I am the patient<br>find me the closest doctors please!.').openPopup();
        marker.addTo(mymap);


        //doctors
        // console.log(pat.firstName);


        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}',
            {
                attribution:
                    'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                maxZoom: 18,
                id: 'mapbox.streets',
                accessToken:
                    'pk.eyJ1IjoiaXNtYWlsMTk5NCIsImEiOiJjam90MDlxNmEwdG94M2twYWdyemdxMWJ1In0.papmvJruFCzp06NqaLVQcg'
            }).addTo(mymap);
        var element;

        function onMarkerClick(data) {

            console.log(data.address);
            var htmlcontent = "";
            $('#DropDoc').html(` <div class="user-btm-box" id="doctorInfo">
                <div class="row">
                                            <div class="profile-userpic">
                                                <img src="` +
                data.UrlPhoto +
                `" class="img-responsive" alt=""><br> <button type="button" onclick="addDoctorTopath()" id="submitdoc" class="btn btn-circle btn-success"><i class="fa fa-plus-circle"></i> Add </button></div>
                                        </div>
                            <!-- .row -->
                            <div class="row text-center m-t-10">
                            <input hidden id="docId" value="
                           ` +
                data.id +
                `"/>
                           <input hidden id="docspec" value="
                           ` +
                data.speciality +
                `"/>

                                <div class="col-lg-6 col-md-12 col-sm-6 col-xs-12 b-r">
                                    <strong>Name</strong>


                                    <p>` +
                data.firstName +
                ` ` +
                data.lastName +
                `</p>
                                </div>
                                <div class="col-lg-6 col-md-12 col-sm-6 col-xs-12">
                                    <strong>Speciality</strong>
                                    <p>` +
                data.speciality +
                `</p>
                                </div>
                            </div>
                            <!-- /.row -->
                            <hr>
                            <!-- .row -->
                            <div class="row text-center m-t-10">
                                <div class="col-lg-6 col-md-12 col-sm-6 col-xs-12 b-r">
                                    <strong>Email </strong>
                                    <p>` +
                data.email +
                `</p>
                                </div>
                                <div class="col-lg-6 col-md-12 col-sm-6 col-xs-12">
                                    <strong>Phone</strong>
                                    <p>` +
                data.phoneNumber +
                `</p>
                                </div>
                            </div>
                            <!-- /.row -->
                            <hr>
                            <!-- .row -->
                            <div class="row text-center m-t-10">
                                <div class="col-md-12">
                                    <strong>Address</strong>
                                    <p>

                                       ` +
                data.address.fullAddress +
                `
                                    </p>
                                </div>
                            </div>
                        </div>`);
        }

        function searchdoctorsBySpeciality() {
            var text = $('#tags').val();

            var array = @Html.Raw(Json.Encode(ViewBag.result));
            if (text == "") {
             

                //   console.log("here")
                array.map(e => {
                    // element = JSON.stringify(e);
                   
                    var marker = L.marker([e.address.latitude, e.address.longit]);
                    element = JSON.stringify(e);

                    marker
                        .bindPopup("<b>Hello Doc!</b><br><br>I am  <b>Dr." +
                            e.lastName +
                            " , i'm a " +
                            e.speciality +
                            "</b><center><br><button class='btn btn-circle btn-primary' onclick='onMarkerClick(" +
                            element +
                            ")'>" +
                            "<i class='fa fa-address-book'></i></button></center> ")
                        .openPopup();

                    marker.addTo(mymap);
                });
            } else {
               
                array.map(e => {
                    if (e.speciality.includes(text)) {
                        console.clear();
                        var complex={};
                        complex.address = e.address;
                        complex.distanceCalculated = distance(pat.address.latitude,
                            pat.address.longit,
                            e.address.latitude,
                            e.address.longit,
                            "K");
                        distances.push(complex);
                        //var distan=distance(pat.address.latitude, pat.address.longit, e.address.latitude, e.address.longit, "K");
                        var marker = L.marker([e.address.latitude, e.address.longit]);
                        element = JSON.stringify(e);

                        marker
                            .bindPopup("<b>Hello Doc!</b><br><br>I am  <b>Dr." +
                                e.lastName +
                                " , i'm a " +
                                e.speciality +
                                "</b><center><br><button class='btn btn-circle btn-primary' onclick='onMarkerClick(" +
                                element +
                                ")'>" +
                                "<i class='fa fa-address-book'></i></button></center> ")
                            .openPopup();

                        marker.addTo(mymap);
                    }
                });
                //distances.map(i => {
                //    var calcul=distance(pat.address.latitude, pat.address.longit, i.latitude, i.longit, "K");
                //    choosedDistances.push(calcul);
                //})
                //choosedDistances.sort();
                //console.log("aaaaa"+choosedDistances);
                swal({
                    title: "Find The closest!",
                    text: "The closest doctor is here.",
                    type: "success",
                    timer: 3000
                });
               
                
                distances.sort(function(a, b){return a.distanceCalculated - b.distanceCalculated});
                console.log(distances);
                var polygon = L.polygon([
                    [pat.address.latitude,pat.address.longit],
                    [distances[0].address.latitude, distances[0].address.longit],
                    [distances[1].address.latitude, distances[1].address.longit]
                    
                ]).addTo(mymap);
                polygon.bindPopup("<b>Hello Doc</b>, <br>I tried to get for you the closest for this patient!<br>I'm here to help you :).");
            }


        }


        function autocompelte() {

            $("#tags").autocomplete({
                source: specialities
            });
        }

        function addDoctorTopath() {
            console.log($('#docId').val());
            console.log($('#idPathPatient').val());
            console.log($('#docspec').val());

            swal({
                    title: "Adding doctors to patient path",
                    text: "are you sure to add this doctor?",
                    type: "info",
                    showCancelButton: true,
                    closeOnConfirm: false,
                    showLoaderOnConfirm: true
                },
                function() {
                    setTimeout(function() {
                            $.ajax({
                                type: "POST",
                                url: "/MedicalPath/addDoctorToPath",

                                data: {
                                    idDoc: $('#docId').val(),
                                    idpath: $('#idPathPatient').val(),
                                    desc: $('#docspec').val(),
                                    email: pat.email
                        },
                                dataType: "json",
                                success: function(data) {
                                    $('#DropDoc').empty();
                                    //swal("Succes!", "You wrote: " + data.message, "success");

                                    location.reload();

                                }
                            });
                        },
                        2000);
                });
        }
        function distance(lat1, lon1, lat2, lon2, unit) {
            var radlat1 = Math.PI * lat1/180
            var radlat2 = Math.PI * lat2/180
            var radlon1 = Math.PI * lon1/180
            var radlon2 = Math.PI * lon2/180
            var theta = lon1-lon2
            var radtheta = Math.PI * theta/180
            var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);
            dist = Math.acos(dist)
            dist = dist * 180/Math.PI
            dist = dist * 60 * 1.1515
            if (unit=="K") { dist = dist * 1.609344 }
            if (unit=="N") { dist = dist * 0.8684 }
            return dist
        }        
    </script>
}

